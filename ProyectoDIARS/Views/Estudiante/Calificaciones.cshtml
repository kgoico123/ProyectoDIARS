@model ProyectoDIARS.ViewModels.EstudianteCalificacionesVM
@{
    ViewData["Title"] = "Detalle de Calificaciones";

    string GetColorFromPromedio(int? promedio)
    {
        if (!promedio.HasValue) return "bg-gray-200 text-gray-800"; // Sin calificar
        if (promedio >= 18) return "bg-green-500 text-white"; // AD
        if (promedio >= 14) return "bg-green-400 text-white"; // A
        if (promedio >= 11) return "bg-yellow-400 text-gray-800"; // B
        return "bg-red-500 text-white"; // C
    }

    string GetLiteralFromPromedio(int? promedio)
    {
        if (!promedio.HasValue) return "N/A";
        if (promedio >= 18) return "AD";
        if (promedio >= 14) return "A";
        if (promedio >= 11) return "B";
        return "C";
    }
}

<div class="container mx-auto p-4 md:p-6">
    <!-- Botón para volver al Dashboard -->
    <div class="mb-6">
        <a asp-action="Dashboard" asp-controller="Estudiante"
            class="inline-flex items-center text-sm font-medium text-gray-600 hover:text-gray-900">
            <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24"
                xmlns="http://www.w3.org/2000/svg">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18">
                </path>
            </svg>
            Volver al Dashboard
        </a>
    </div>

    <!-- Cabecera del Curso -->
    <div class="bg-white rounded-xl shadow-lg p-6 mb-8">
        <div class="flex flex-col md:flex-row justify-between items-start md:items-center">
            <div>
                <h1 class="text-3xl font-bold text-gray-900">@Model.NombreCurso</h1>
                <div class="mt-4 space-y-2 text-gray-600">
                    <div class="flex items-center">
                        <svg class="w-5 h-5 mr-2 text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24"
                            xmlns="http://www.w3.org/2000/svg">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
                        </svg>
                        <span><strong>Docente:</strong> @Model.NombreDocente</span>
                    </div>
                    <div class="flex items-center">
                        <svg class="w-5 h-5 mr-2 text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24"
                            xmlns="http://www.w3.org/2000/svg">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                        </svg>
                        <span><strong>Horario:</strong> @Model.Horario</span>
                    </div>
                </div>
            </div>
            <div class="text-center mt-6 md:mt-0 md:ml-6 flex-shrink-0">
                <div class="text-sm text-gray-500 mb-1">Promedio Final</div>
                <div
                    class="w-24 h-24 rounded-full @GetColorFromPromedio(Model.promedioAcumulado) text-white flex flex-col items-center justify-center font-bold text-2xl shadow-md">
                    <span>@GetLiteralFromPromedio(Model.promedioAcumulado)</span>
                    <span class="text-sm">(@(Model.promedioAcumulado?.ToString() ?? "0"))</span>
                </div>
            </div>
        </div>
    </div>

    <!-- Tabla de Calificaciones -->
    <div class="bg-white rounded-xl shadow-lg overflow-hidden">
        <div class="p-6">
            <h2 class="text-xl font-bold text-gray-800 mb-4">Detalle de Notas</h2>
            @if (Model.Calificaciones != null && Model.Calificaciones.Any())
            {
                <div class="overflow-x-auto">
                    <table class="min-w-full bg-white">
                        <thead class="bg-gray-50">
                            <tr>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                                    Fecha</th>
                                <th
                                    class="px-6 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider">
                                    Nota</th>
                            </tr>
                        </thead>
                        <tbody class="divide-y divide-gray-200">
                            @foreach (var calificacion in Model.Calificaciones)
                            {
                                <tr>
                                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                        @calificacion.FechaCalificacion.ToString("dd 'de' MMMM, yyyy")</td>
                                    <td class="px-6 py-4 whitespace-nowrap text-center text-sm font-semibold">
                                        <span class="px-3 py-1 rounded-full @GetColorFromPromedio(calificacion.Puntaje)">
                                            @calificacion.Puntaje
                                        </span>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <div class="text-center py-10">
                    <p class="text-gray-500">Aún no hay calificaciones registradas para este curso.</p>
                </div>
            }
        </div>
    </div>
</div>

