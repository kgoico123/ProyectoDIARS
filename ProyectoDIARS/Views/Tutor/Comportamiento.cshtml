@model ProyectoDIARS.ViewModels.TutorComportamientoVM
@{
    ViewData["Title"] = "Conducta";

    // Contar las calificaciones por tipo
    var totalAD = Model.Conductas.Count(c => c.Calificacion == "AD");
    var totalA = Model.Conductas.Count(c => c.Calificacion == "A");
    var totalB = Model.Conductas.Count(c => c.Calificacion == "B");
    var totalC = Model.Conductas.Count(c => c.Calificacion == "C");

    string ColorClaseConducta(string calificacion)
    {
        return calificacion switch
        {
            "AD" => "bg-blue-100 text-blue-800",
            "A" => "bg-green-100 text-green-800",
            "B" => "bg-yellow-100 text-yellow-800",
            "C" => "bg-red-100 text-red-800",
            _ => "bg-gray-100 text-gray-800"
        };
    }
}

<div class="min-h-screen p-4 sm:p-6 lg:p-8">
    <div class="max-w-7xl mx-auto">
        <div class="flex flex-col sm:flex-row sm:items-center sm:justify-between mb-8">
            <h2 class="text-2xl sm:text-3xl font-bold text-gray-800 mb-2 sm:mb-0">
                Conducta de <span class="text-indigo-600">@Model.Estudiante?.user?.UserName</span>
            </h2>
            <a href="@Url.Action("Dashboard", "Tutor")"
                class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-indigo-700 bg-indigo-100 hover:bg-indigo-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 transition-colors">
                &larr; Volver al Panel
            </a>
        </div>

        @if (!Model.Conductas.Any())
        {
            <div class="bg-white text-center p-12 rounded-lg shadow-md mt-10">
                <svg class="mx-auto h-12 w-12 text-gray-400" xmlns="http://www.w3.org/2000/svg" fill="none"
                    viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round"
                        d="M15.182 15.182a4.5 4.5 0 01-6.364 0M21 12a9 9 0 11-18 0 9 9 0 0118 0zM9 9.75h.008v.008H9V9.75zm6 0h.008v.008H15V9.75z" />
                </svg>
                <h3 class="mt-2 text-lg font-medium text-gray-900">Sin Registros de Conducta</h3>
                <p class="mt-1 text-sm text-gray-500">No hay registros de conducta para este estudiante.</p>
            </div>
        }
        else
        {
            <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
                <div class="lg:col-span-1 bg-white p-6 rounded-xl shadow-lg flex flex-col items-center justify-center">
                    <h3 class="text-lg font-semibold text-gray-700 mb-4">Resumen de Conducta</h3>
                    <div style="width:300px; height:300px;">
                        <canvas id="conductaPieChart"></canvas>
                    </div>
                </div>

                <div class="lg:col-span-2 bg-white rounded-xl shadow-lg p-6">
                    <h3 class="text-lg font-semibold text-gray-700 mb-4">Historial Detallado</h3>
                    <div class="space-y-6">
                        @foreach (var c in Model.Conductas.OrderByDescending(con => con.FechaRegistro))
                        {
                            <div class="flex items-start">
                                <div class="flex-shrink-0">
                                    <span
                                        class="inline-flex items-center justify-center h-8 w-8 rounded-full @ColorClaseConducta(c.Calificacion)">
                                        <span class="text-sm font-bold">@c.Calificacion</span>
                                    </span>
                                </div>
                                <div class="ml-4">
                                    <p class="text-sm font-medium text-gray-900">@c.Descripcion</p>
                                    <p class="text-xs text-gray-500">@c.FechaRegistro.ToString("dd MMM yyyy, HH:mm")</p>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            @if (Model.Conductas.Any())
                {
                    <text>
                        const ctx = document.getElementById('conductaPieChart')?.getContext('2d');
                        if (ctx) {
                            const data = {
                            labels: ['AD (Muy Bueno)', 'A (Bueno)', 'B (Regular)', 'C (Malo)'],
                        datasets: [{
                            label: 'Registros',
                        data: [@totalAD, @totalA, @totalB, @totalC],
                        backgroundColor: [
                        '#3b82f6', // blue-500
                        '#22c55e', // green-500
                        '#f59e0b', // amber-500
                        '#ef4444'  // red-500
                        ],
                        hoverOffset: 4
                                }]
                            };
                        const config = {
                            type: 'pie',
                        data: data,
                        options: {
                            responsive: true,
                        maintainAspectRatio: false,
                        plugins: {
                            legend: {
                            position: 'bottom',
                        labels: {
                            padding: 20,
                        boxWidth: 12
                                            }
                                        }
                                    }
                                }
                            };
                        new Chart(ctx, config);
                        }
                    </text>
            }
            });
    </script>
}

<span
                                                            labels: {
padding:20,
boxWith1}
}
}
}
                    